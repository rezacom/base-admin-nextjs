import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import { NextIntlClientProvider, hasLocale } from "next-intl";
import { notFound } from "next/navigation";
import { routing } from "@/i18n/routing";
import { ThemeProvider } from "next-themes";
import { AppRouterCacheProvider } from "@mui/material-nextjs/v15-appRouter";

import "../globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: Promise<{ lng: string }>;
}>) {
  // Ensure that the incoming `lng` is valid
  // if(typeof window !== "undefined")
  const { lng } = await params;
  if (!hasLocale(routing.locales, lng)) {
    notFound();
  }

  return (
    <html lang={lng} className="h-full">
      <body className={`${geistSans.variable} ${geistMono.variable} h-full`}>
        <ThemeProvider attribute="class" defaultTheme="system" enableSystem>
          <AppRouterCacheProvider options={{ enableCssLayer: true }}>
            <NextIntlClientProvider>{children}</NextIntlClientProvider>
          </AppRouterCacheProvider>
        </ThemeProvider>
      </body>
    </html>
  );
}

//
